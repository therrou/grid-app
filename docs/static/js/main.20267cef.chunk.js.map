{"version":3,"sources":["components/AddCard.js","components/Navbar.js","components/PaginationButtons.js","components/SingleCard.js","components/CardGrid.js","GridApp.js","index.js"],"names":["AddCard","setDataJson","dataJson","useState","title","description","imagePath","formState","setformState","handleInputChange","target","name","value","disabled","className","id","tabIndex","type","htmlFor","onChange","required","placeholder","rows","onClick","e","preventDefault","Navbar","setSearch","href","PaginationButtons","cardsPerPage","handlePagination","pages","i","Math","ceil","length","push","map","page","SingleCard","loading","src","alt","CardGrid","data","currentPage","setCurrentPage","search","useEffect","indexOfLastCard","indexOfFirstCard","currentCards","slice","dataFiltered","filter","card","toLowerCase","includes","GridApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20267cef.chunk.js","sourcesContent":["import React, {  useState } from 'react'\r\n\r\nexport const AddCard = ({setDataJson, dataJson}) => {\r\n\r\n    const [formState, setformState] = useState({title: '', description: '', imagePath: ''})\r\n\r\n    const {imagePath, title, description} = formState\r\n\r\n        const handleInputChange = ({target}) => {\r\n                setformState({\r\n                    ...formState,\r\n                    [target.name] : target.value\r\n                })\r\n        }\r\n\r\n        \r\n    \r\n        let disabled = true\r\n        if(formState.title !== '' && formState.imagePath !== '') {\r\n                disabled = false;\r\n        }\r\n        const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            \r\n            setDataJson([formState, ...dataJson])\r\n            setformState({title:'', description: '', imagePath: ''})\r\n\r\n        }\r\n     \r\n    return (\r\n        <>\r\n        <div className='btn-add-container'>\r\n            <button className='btn btn-success m-3' \r\n                    data-bs-toggle=\"modal\" \r\n                    data-bs-target=\"#exampleModal\">\r\n             + </button>\r\n        </div>\r\n\r\n        <form className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add a new card: </h5>\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                </div>\r\n                    <div className=\"mb-1 p-3\">\r\n                        <label htmlFor=\"imagePath\" className=\"form-label\">URL Image</label>\r\n                        <input \r\n                            onChange={handleInputChange}\r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"imagePath\" \r\n                            name='imagePath' \r\n                            required\r\n                            value={imagePath}\r\n                            placeholder=\"https://...\" />\r\n                    </div>\r\n                    <div className=\"mb-1 p-3\">\r\n                        <label htmlFor=\"cardTitle\" className=\"form-label\">Card Title</label>\r\n                        <input \r\n                            onChange={handleInputChange}\r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            id=\"cardTitle\"\r\n                            value={title}\r\n                            name='title' \r\n                            required\r\n                            placeholder=\"Best Image Ever...\" />\r\n                    </div>\r\n                    <div className=\"mb-1 p-3\">\r\n                        <label htmlFor=\"descriptionCard\" className=\"form-label\">Card Description</label>\r\n                        <textarea \r\n                            onChange={handleInputChange}\r\n                            className=\"form-control\" \r\n                            id=\"descriptionCard\" \r\n                            name='description' \r\n                            value={description}\r\n                            rows=\"3\" \r\n                            required\r\n                            placeholder='Description....'></textarea>\r\n                    </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                    <button onClick={handleSubmit} type=\"button\" disabled={disabled} className=\"btn btn-primary\" data-bs-dismiss=\"modal\">Add new card</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Navbar = ({setSearch}) => {\r\n\r\n    const handleInputChange = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"container-fluid\">\r\n                <a href='/' className=\"navbar-brand\">Grid App</a>\r\n                <form className=\"d-flex\">\r\n                <input onChange={handleInputChange} name='search' className=\"form-control me-2\" type=\"search\" placeholder=\"Search by title...\" aria-label=\"Search\" />\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const PaginationButtons = ({ cardsPerPage, dataJson, handlePagination }) => {\r\n\r\n    const pages = [];\r\n    for(let i = 1; i <= Math.ceil(dataJson.length / cardsPerPage); i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n     \r\n    return (\r\n        <div className='m-1 pagination-container'>\r\n            {\r\n                pages.map( page => {\r\n                    return <button key={page+1} onClick={() => handlePagination(page)} className='page btn btn-primary m-1'> { page } </button>\r\n                })\r\n            }\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const SingleCard = ({imagePath, title, description}) => {\r\n    return (\r\n        <div className=\"card m-2\">\r\n        <img loading='lazy' src={imagePath} className=\"card-img-top\" alt={description} />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{ title}</h5>\r\n          <p className=\"card-text\">{description}</p>\r\n        \r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { AddCard } from './AddCard';\r\nimport { Navbar } from './Navbar';\r\nimport { PaginationButtons } from './PaginationButtons';\r\nimport { SingleCard } from './SingleCard'\r\n\r\nexport const CardGrid = ({data}) => {\r\n    \r\n    \r\n    const [dataJson, setDataJson] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [cardsPerPage] = useState(6)\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect( ()=> {\r\n        setDataJson(data)\r\n    }, [data]);\r\n\r\n    const indexOfLastCard = currentPage * cardsPerPage;\r\n    const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n    const currentCards = dataJson.slice(indexOfFirstCard, indexOfLastCard)\r\n    \r\n\r\n    const handlePagination = (currentPage) => {\r\n        setCurrentPage(currentPage)\r\n    }\r\n\r\n    const dataFiltered = dataJson.filter((card) => {\r\n        if (card.title.toLowerCase().includes(search.toLowerCase())) { \r\n        return card\r\n    } \r\n    })\r\n\r\n   \r\n    return (\r\n        <>\r\n        <Navbar setSearch={setSearch} />\r\n        <AddCard\r\n             dataJson={dataJson}\r\n             setDataJson={setDataJson}\r\n             />\r\n             {\r\n                  search === '' \r\n                  ?  \r\n                  <PaginationButtons  \r\n                  dataJson={dataJson} \r\n                  cardsPerPage={cardsPerPage}\r\n                  handlePagination={handlePagination}\r\n                   />\r\n                  : ''\r\n             }\r\n        <div className=\"grid-card-group\">\r\n            {    \r\n                search === '' \r\n                ?\r\n                currentCards.map( ({title, description, imagePath}) => \r\n                <SingleCard \r\n                   key={title}  \r\n                   title={title}\r\n                   description={description} \r\n                   imagePath={imagePath} />)\r\n                :\r\n                \r\n                (\r\n                    dataFiltered.length < 1\r\n                    ?\r\n                    <div className='alert alert-warning m-3'> <b> No results :( Try again! </b> </div>\r\n                    : \r\n                    dataFiltered.map( ({title, description, imagePath}) => \r\n                     <SingleCard \r\n                        key={title}  \r\n                        title={title}\r\n                        description={description} \r\n                        imagePath={imagePath} />)\r\n                    \r\n\r\n                )\r\n                \r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { CardGrid } from './components/CardGrid';\r\n\r\nimport data from './data.json';\r\n\r\nexport const GridApp = () => {\r\n\r\n    return (\r\n        <>\r\n            <CardGrid data={data} />\r\n        </>\r\n    )   \r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GridApp } from './GridApp';\n\nimport './assets/index.css';\n\nReactDOM.render(\n    <GridApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}